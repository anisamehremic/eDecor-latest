// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eDecor.WebAPI.Database;

namespace eDecor.WebAPI.Migrations
{
    [DbContext(typeof(eDecorContext))]
    partial class eDecorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eDecor.WebAPI.Database.Artikli", b =>
                {
                    b.Property<int>("ArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ArtikalID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PodkategorijaId")
                        .HasColumnName("PodkategorijaID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ArtikalId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("PodkategorijaId");

                    b.ToTable("Artikli");

                    b.HasData(
                        new
                        {
                            ArtikalId = 1,
                            Cijena = 500m,
                            KategorijaId = 1,
                            Naziv = "Vjenčanica La sposa #1",
                            Opis = "Test1",
                            PodkategorijaId = 1,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 2,
                            Cijena = 550m,
                            KategorijaId = 1,
                            Naziv = "Vjenčanica La sposa #2",
                            Opis = "Test1",
                            PodkategorijaId = 1,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 3,
                            Cijena = 450m,
                            KategorijaId = 1,
                            Naziv = "Vjenčanica Demetrios #1",
                            Opis = "Test1",
                            PodkategorijaId = 2,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 4,
                            Cijena = 400m,
                            KategorijaId = 1,
                            Naziv = "Vjenčanica Promovias #1",
                            Opis = "Test1",
                            PodkategorijaId = 3,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 5,
                            Cijena = 90m,
                            KategorijaId = 2,
                            Naziv = "Buket Bozur #1",
                            Opis = "Test1",
                            PodkategorijaId = 4,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 6,
                            Cijena = 100m,
                            KategorijaId = 2,
                            Naziv = "Buket Orhideja #1",
                            Opis = "Test1",
                            PodkategorijaId = 5,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 7,
                            Cijena = 150m,
                            KategorijaId = 2,
                            Naziv = "Buket Ruza #1",
                            Opis = "Test1",
                            PodkategorijaId = 6,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 8,
                            Cijena = 125m,
                            KategorijaId = 2,
                            Naziv = "Buket Ruza #2",
                            Opis = "Test1",
                            PodkategorijaId = 6,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 9,
                            Cijena = 12m,
                            KategorijaId = 3,
                            Naziv = "Cvjetići Kala #1",
                            Opis = "Cvjetići od kale - 50kom",
                            PodkategorijaId = 7,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 10,
                            Cijena = 9m,
                            KategorijaId = 3,
                            Naziv = "Cvjetići Saten #1",
                            Opis = "Cvjetići od satena - 50kom",
                            PodkategorijaId = 8,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 11,
                            Cijena = 18m,
                            KategorijaId = 3,
                            Naziv = "Cvjetići Saten #2",
                            Opis = "Cvjetići od satena - 100kom",
                            PodkategorijaId = 8,
                            Status = true
                        },
                        new
                        {
                            ArtikalId = 12,
                            Cijena = 20m,
                            KategorijaId = 3,
                            Naziv = "Cvjetići Juta #1",
                            Opis = "Cvjetići od jute - 50kom",
                            PodkategorijaId = 9,
                            Status = true
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");

                    b.HasData(
                        new
                        {
                            DrzavaId = 1,
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            DrzavaId = 2,
                            Naziv = "Srbija"
                        },
                        new
                        {
                            DrzavaId = 3,
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            DrzavaId = 4,
                            Naziv = "Crna Gora"
                        },
                        new
                        {
                            DrzavaId = 5,
                            Naziv = "Slovenija"
                        },
                        new
                        {
                            DrzavaId = 6,
                            Naziv = "Sjeverna Makedonija"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");

                    b.HasData(
                        new
                        {
                            GradId = 1,
                            DrzavaId = 1,
                            Naziv = "Mostar"
                        },
                        new
                        {
                            GradId = 2,
                            DrzavaId = 1,
                            Naziv = "Sarajevo"
                        },
                        new
                        {
                            GradId = 3,
                            DrzavaId = 1,
                            Naziv = "Zenica"
                        },
                        new
                        {
                            GradId = 4,
                            DrzavaId = 1,
                            Naziv = "Banja Luka"
                        },
                        new
                        {
                            GradId = 5,
                            DrzavaId = 1,
                            Naziv = "Tuzla"
                        },
                        new
                        {
                            GradId = 6,
                            DrzavaId = 2,
                            Naziv = "Beograd"
                        },
                        new
                        {
                            GradId = 7,
                            DrzavaId = 2,
                            Naziv = "Novi Sad"
                        },
                        new
                        {
                            GradId = 8,
                            DrzavaId = 2,
                            Naziv = "Novi Pazar"
                        },
                        new
                        {
                            GradId = 9,
                            DrzavaId = 3,
                            Naziv = "Zagreb"
                        },
                        new
                        {
                            GradId = 10,
                            DrzavaId = 3,
                            Naziv = "Split"
                        },
                        new
                        {
                            GradId = 11,
                            DrzavaId = 3,
                            Naziv = "Dubrovnik"
                        },
                        new
                        {
                            GradId = 12,
                            DrzavaId = 4,
                            Naziv = "Podgorica"
                        },
                        new
                        {
                            GradId = 13,
                            DrzavaId = 5,
                            Naziv = "Ljubljana"
                        },
                        new
                        {
                            GradId = 14,
                            DrzavaId = 6,
                            Naziv = "Skoplje"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Kategorije", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorije");

                    b.HasData(
                        new
                        {
                            KategorijaId = 1,
                            Naziv = "Vjenčanice"
                        },
                        new
                        {
                            KategorijaId = 2,
                            Naziv = "Buketi"
                        },
                        new
                        {
                            KategorijaId = 3,
                            Naziv = "Cvjetići"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Klijenti", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KlijentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KlijentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Klijenti_Email");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("Klijenti_KorisnickoIme");

                    b.ToTable("Klijenti");

                    b.HasData(
                        new
                        {
                            KlijentId = 1,
                            DatumRegistracije = new DateTime(2020, 11, 21, 10, 10, 26, 966, DateTimeKind.Local),
                            Email = "kupac@gamil.ba",
                            GradId = 1,
                            Ime = "Kupac",
                            KorisnickoIme = "mobile",
                            LozinkaHash = "HzoOkNHGE27Bfhd/8f1uxeQRCOM=",
                            LozinkaSalt = "rHh+zm55r5AYhYbSovWIwA==",
                            Prezime = "Kupac",
                            Status = true,
                            Telefon = "+387 61 222 222"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KorisnikId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Korisnici_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("Korisnici_KorisnickoIme");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            KorisnikId = 1,
                            Email = "admin@gmail.ba",
                            GradId = 1,
                            Ime = "Admin",
                            KorisnickoIme = "desktop",
                            LozinkaHash = "HzoOkNHGE27Bfhd/8f1uxeQRCOM=",
                            LozinkaSalt = "rHh+zm55r5AYhYbSovWIwA==",
                            Prezime = "Admin",
                            Status = true,
                            Telefon = "+387 61 000 000"
                        },
                        new
                        {
                            KorisnikId = 2,
                            Email = "radnik@gmail.ba",
                            GradId = 1,
                            Ime = "Radnik",
                            KorisnickoIme = "radnik",
                            LozinkaHash = "HzoOkNHGE27Bfhd/8f1uxeQRCOM=",
                            LozinkaSalt = "rHh+zm55r5AYhYbSovWIwA==",
                            Prezime = "Radnik",
                            Status = true,
                            Telefon = "+387 61 111 1111"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");

                    b.HasData(
                        new
                        {
                            KorisnikUlogaId = 1,
                            DatumIzmjene = new DateTime(2020, 11, 21, 10, 10, 10, 966, DateTimeKind.Local),
                            KorisnikId = 1,
                            UlogaId = 1
                        },
                        new
                        {
                            KorisnikUlogaId = 2,
                            DatumIzmjene = new DateTime(2020, 11, 21, 10, 10, 10, 966, DateTimeKind.Local),
                            KorisnikId = 2,
                            UlogaId = 2
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Notifikacije", b =>
                {
                    b.Property<int>("NotifikacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotifikacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("NotifikacijaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Notifikacije");

                    b.HasData(
                        new
                        {
                            NotifikacijaId = 1,
                            DatumSlanja = new DateTime(2020, 6, 1, 10, 10, 10, 966, DateTimeKind.Local),
                            KlijentId = 1,
                            KorisnikId = 1,
                            Naziv = "Nova kolekcija ljeto 2020",
                            Sadrzaj = "U ponudi se sada nalazi nova kolekcija ljeto 2020 ",
                            Status = true
                        },
                        new
                        {
                            NotifikacijaId = 2,
                            DatumSlanja = new DateTime(2021, 1, 13, 10, 10, 10, 966, DateTimeKind.Local),
                            KlijentId = 1,
                            KorisnikId = 1,
                            Naziv = "Nova kolekcija zima 2020/2021",
                            Sadrzaj = "U ponudi se sada nalazi nova kolekcija zima 2020/2020 ",
                            Status = true
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnName("ArtikalID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Podkategorije", b =>
                {
                    b.Property<int>("PodkategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PodkategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("PodkategorijaId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Podkategorije");

                    b.HasData(
                        new
                        {
                            PodkategorijaId = 1,
                            KategorijaId = 1,
                            Naziv = "La sposa"
                        },
                        new
                        {
                            PodkategorijaId = 2,
                            KategorijaId = 1,
                            Naziv = "Demetrios"
                        },
                        new
                        {
                            PodkategorijaId = 3,
                            KategorijaId = 1,
                            Naziv = "Promovias"
                        },
                        new
                        {
                            PodkategorijaId = 4,
                            KategorijaId = 2,
                            Naziv = "Bozur"
                        },
                        new
                        {
                            PodkategorijaId = 5,
                            KategorijaId = 2,
                            Naziv = "Orhideja"
                        },
                        new
                        {
                            PodkategorijaId = 6,
                            KategorijaId = 2,
                            Naziv = "Ruža"
                        },
                        new
                        {
                            PodkategorijaId = 7,
                            KategorijaId = 3,
                            Naziv = "Kala"
                        },
                        new
                        {
                            PodkategorijaId = 8,
                            KategorijaId = 3,
                            Naziv = "Saten"
                        },
                        new
                        {
                            PodkategorijaId = 9,
                            KategorijaId = 3,
                            Naziv = "Juta"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Popusti", b =>
                {
                    b.Property<int>("PopustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PopustID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<string>("Kod")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PopustId");

                    b.HasIndex("Kod")
                        .IsUnique()
                        .HasName("Popust_PopustKod")
                        .HasFilter("[Kod] IS NOT NULL");

                    b.ToTable("Popusti");

                    b.HasData(
                        new
                        {
                            PopustId = 1,
                            Datum = new DateTime(2020, 11, 21, 10, 10, 10, 966, DateTimeKind.Local),
                            Kod = "1111",
                            Popust = 1m,
                            Status = true
                        },
                        new
                        {
                            PopustId = 2,
                            Datum = new DateTime(2020, 11, 21, 10, 10, 10, 966, DateTimeKind.Local),
                            Kod = "2222",
                            Popust = 2m,
                            Status = true
                        },
                        new
                        {
                            PopustId = 3,
                            Datum = new DateTime(2020, 11, 21, 10, 10, 10, 966, DateTimeKind.Local),
                            Kod = "3333",
                            Popust = 3m,
                            Status = true
                        },
                        new
                        {
                            PopustId = 4,
                            Datum = new DateTime(2020, 11, 21, 10, 10, 10, 966, DateTimeKind.Local),
                            Kod = "4444",
                            Popust = 4m,
                            Status = true
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Pretplate", b =>
                {
                    b.Property<int>("PretplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PretplataID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PretplataId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Pretplate");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<decimal>("IznosAvansnogPlacanje")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Placeno")
                        .HasColumnType("bit");

                    b.Property<int?>("PopustId")
                        .HasColumnName("PopustID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("GradId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PopustId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.RezervacijeArtikli", b =>
                {
                    b.Property<int>("RezervacijaArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaArtikalID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnName("ArtikalID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaArtikalId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijeArtikli");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");

                    b.HasData(
                        new
                        {
                            UlogaId = 1,
                            Naziv = "Administrator",
                            Opis = "Administrator"
                        },
                        new
                        {
                            UlogaId = 2,
                            Naziv = "Radnik",
                            Opis = "Radnik u poslovnici"
                        });
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Artikli", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Artikli")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Artikli_Kategorije")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Podkategorije", "Podkategorija")
                        .WithMany("Artikli")
                        .HasForeignKey("PodkategorijaId")
                        .HasConstraintName("FK_Artikli_Podkategorije")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Gradovi_Drzave")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Klijenti", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Klijenti")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Klijenti_Gradovi")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Korisnici")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Korisnici_Gradovi")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Notifikacije", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Notifikacije")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Notifikacije_Klijenti");

                    b.HasOne("eDecor.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Notifikacije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Novosti_Korisnici")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("Ocjene")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK_Ocjene_Atrikli")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Ocjene")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Ocjene_Klijenti")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Podkategorije", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Podkategorije")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Podkategorije_Kategorije")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Pretplate", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Pretplate")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Preplate_Kategorije")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Pretplate")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Preplate_Klijenti")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Rezervacije")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Rezervacije_Gradovi")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Rezervacije_Klijenti");

                    b.HasOne("eDecor.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Rezervacije_Korisnici");

                    b.HasOne("eDecor.WebAPI.Database.Popusti", "Popust")
                        .WithMany("Rezervacije")
                        .HasForeignKey("PopustId")
                        .HasConstraintName("FK_Rezervacije_Popusti");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.RezervacijeArtikli", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("RezervacijeArtikli")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK_RezervacijeArtikli_Artikli")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("RezervacijeArtikli")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_RezervacijeArtikli_Rezervacije")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
