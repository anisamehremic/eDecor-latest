// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eDecor.WebAPI.Database;

namespace eDecor.WebAPI.Migrations
{
    [DbContext(typeof(eDecorContext))]
    [Migration("20210113213258_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eDecor.WebAPI.Database.Artikli", b =>
                {
                    b.Property<int>("ArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ArtikalID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PodkategorijaId")
                        .HasColumnName("PodkategorijaID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ArtikalId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("PodkategorijaId");

                    b.ToTable("Artikli");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Kategorije", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Klijenti", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KlijentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KlijentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Klijenti_Email");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("Klijenti_KorisnickoIme");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KorisnikId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Korisnici_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("Korisnici_KorisnickoIme");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Notifikacije", b =>
                {
                    b.Property<int>("NotifikacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotifikacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("NotifikacijaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Notifikacije");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnName("ArtikalID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Podkategorije", b =>
                {
                    b.Property<int>("PodkategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PodkategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("PodkategorijaId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Podkategorije");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Popusti", b =>
                {
                    b.Property<int>("PopustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PopustID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<string>("Kod")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PopustId");

                    b.HasIndex("Kod")
                        .IsUnique()
                        .HasName("Popust_PopustKod")
                        .HasFilter("[Kod] IS NOT NULL");

                    b.ToTable("Popusti");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Pretplate", b =>
                {
                    b.Property<int>("PretplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PretplataID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PretplataId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Pretplate");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<decimal>("IznosAvansnogPlacanje")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("KlijentId")
                        .HasColumnName("KlijentID")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Placeno")
                        .HasColumnType("bit");

                    b.Property<int?>("PopustId")
                        .HasColumnName("PopustID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("GradId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PopustId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.RezervacijeArtikli", b =>
                {
                    b.Property<int>("RezervacijaArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaArtikalID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnName("ArtikalID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaArtikalId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijeArtikli");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Artikli", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Artikli")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Artikli_Kategorije")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Podkategorije", "Podkategorija")
                        .WithMany("Artikli")
                        .HasForeignKey("PodkategorijaId")
                        .HasConstraintName("FK_Artikli_Podkategorije")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Gradovi_Drzave")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Klijenti", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Klijenti")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Klijenti_Gradovi")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Korisnici")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Korisnici_Gradovi")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Notifikacije", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Notifikacije")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Notifikacije_Klijenti");

                    b.HasOne("eDecor.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Notifikacije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Novosti_Korisnici")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("Ocjene")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK_Ocjene_Atrikli")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Ocjene")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Ocjene_Klijenti")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Podkategorije", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Podkategorije")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Podkategorije_Kategorije")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Pretplate", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Pretplate")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Preplate_Kategorije")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Pretplate")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Preplate_Klijenti")
                        .IsRequired();
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Rezervacije")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Rezervacije_Gradovi")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Rezervacije_Klijenti");

                    b.HasOne("eDecor.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Rezervacije_Korisnici");

                    b.HasOne("eDecor.WebAPI.Database.Popusti", "Popust")
                        .WithMany("Rezervacije")
                        .HasForeignKey("PopustId")
                        .HasConstraintName("FK_Rezervacije_Popusti");
                });

            modelBuilder.Entity("eDecor.WebAPI.Database.RezervacijeArtikli", b =>
                {
                    b.HasOne("eDecor.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("RezervacijeArtikli")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK_RezervacijeArtikli_Artikli")
                        .IsRequired();

                    b.HasOne("eDecor.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("RezervacijeArtikli")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_RezervacijeArtikli_Rezervacije")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
